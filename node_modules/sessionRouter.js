var events = require('events');
var uuid = require('node-uuid');
var redis = require('redis');
var mootools = require('./mootools').apply(GLOBAL);
var Cookies = require('cookies');
var crypto = require('crypto');
var sessions = require('sessions');

var SessionRouter = new Class(
{
	initialize : function(req, res, redisClient)
	{
		this.sessionId = req.cookies.get('sessionId');
		this.redisClient = redisClient;
		this.req = req;
		this.res = res;

		res.on('finish', this.onResponseDone.bind(this));
		this.session = new sessions.Session(this.sessionId, redisClient);

	},

	wait : function(callback)
	{
		this.session.wait(this.setSessionId.bind(this, callback));
	},

	setSessionId : function(callback)
	{
		this.res.cookies.set('sessionId', this.session.sessionId, {httpOnly: false});
		callback();
	},

	get : function()
	{
		return this.session.get();
	},

	onResponseDone : function()
	{
		this.session.save();
	}
});

SessionRouter.implement(events.EventEmitter.prototype);

module.exports = function(client)
{
	return function(req, res, next)
	{
		req.session = new SessionRouter(req, res, client);
		req.session.wait(function()
		{
			next();
		});
	}
}

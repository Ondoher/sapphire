/*
Middleware: appPath

Finds the path to the application based on the url path. The appPath is saved
in req.appPath. Url paths look like this

/<app>/<subapp> 			- application root
/<app>/<subapp>/services	- base services directory
/<app>/<subapp>/assets  	- base assets directory
/<app>/<subapp>/pages		- base pages directory
/<app>/<subapp>/dialogs		- base dialogs directory
*/
var domain = require('domain');
var fs = require('fs');
var path = require('path');
var qs = require('querystring');
var url = require('url');
var CONFIG = require('config').CONFIG;

var validatedPaths = [];

function findApp(root, paths, callback)
{
	var path = paths.shift();

	fs.readdir(root, function(err, dirs)
	{
		if (dirs && dirs.indexOf(path) != -1)
		{
			root = root + '/' + path;
			if (paths.length != 0)
			{
				findApp(root, paths, callback);
			}
			else
			{
				callback(true);
			}
		}
		else
		{
			callback(false);
		}
	});
}

module.exports = function()
{
	return function(req, res, next)
	{
		var paths = url.parse(req.url, true).pathname.split('/');
		var appPath = '';
		req.appPath = '';

		if (paths.length == 2 && paths[1] == '' && CONFIG.defaultApp != '')
		{
			paths.pop();
			paths.push(CONFIG.defaultApp);
		}

		var path = paths.shift();
		var serviceIndex = paths.indexOf('services');
		var assetsIndex = paths.indexOf('assets');

		if (serviceIndex != -1)
			paths = paths.slice(0, serviceIndex);
		else if (assetsIndex != -1)
			paths = paths.slice(0, assetsIndex);

		appPath = paths.join('/');

		if (validatedPaths.indexOf(appPath) != -1)
		{
			req.appPath = appPath;
			return next();
		}
		else
		{
			findApp(CONFIG.basePath + 'apps', paths, function(found)
			{
				if (!found)
				{
					next();
				}
				else
				{
					validatedPaths.push(appPath);
					req.appPath = appPath;
					return next();
				}
			});
		}
	}
}
